{"ast":null,"code":"var _jsxFileName = \"/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PastRaces() {\n  _s();\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      const currentYear = new Date().getFullYear();\n      const url = `https://api.openf1.org/v1/meetings?year=2024&country_name=Bahrain`;\n      const response = await axios.get(url);\n      console.log(response.data[0]);\n      // const today = new Date().toISOString().slice(0, 10); // Get today's date in YYYY-MM-DD format\n      // console.log(today);\n\n      // Filter past races based on date\n      // const filteredRaces = response.data?.MRData?.RaceTable?.Races?.filter(\n      //   (race) => race.date < today\n\n      // );\n      // setPastRaces(filteredRaces || []);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n  function handleRefresh() {\n    fetchPastRaces();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      disabled: isLoading,\n      children: isLoading ? \"Refreshing...\" : \"Refresh Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading past races...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : pastRaces.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pastRaces.map(race => {\n        var _race$Results$, _race$Results$$Driver;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [race.raceName, \" (\", race.date, \") - Winner: \", ((_race$Results$ = race.Results[0]) === null || _race$Results$ === void 0 ? void 0 : (_race$Results$$Driver = _race$Results$.Driver) === null || _race$Results$$Driver === void 0 ? void 0 : _race$Results$$Driver.driverId) || \"N/A\"]\n        }, race.round, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No past races found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(PastRaces, \"qV6nfxFS8MuPV6dyj8GUD3A6iLw=\");\n_c = PastRaces;\nexport default PastRaces;\nvar _c;\n$RefreshReg$(_c, \"PastRaces\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PastRaces","_s","pastRaces","setPastRaces","isLoading","setLoading","fetchPastRaces","currentYear","Date","getFullYear","url","response","get","console","log","data","error","handleRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","className","length","map","race","_race$Results$","_race$Results$$Driver","raceName","date","Results","Driver","driverId","round","_c","$RefreshReg$"],"sources":["/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction PastRaces() {\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      const currentYear = new Date().getFullYear();\n      const url = `https://api.openf1.org/v1/meetings?year=2024&country_name=Bahrain`;\n\n      const response = await axios.get(url);\n      console.log(response.data[0]);\n      // const today = new Date().toISOString().slice(0, 10); // Get today's date in YYYY-MM-DD format\n      // console.log(today);\n\n      // Filter past races based on date\n      // const filteredRaces = response.data?.MRData?.RaceTable?.Races?.filter(\n      //   (race) => race.date < today\n        \n      // );\n      // setPastRaces(filteredRaces || []);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n\n  function handleRefresh() {\n    \n    fetchPastRaces();\n  }\n\n  return (\n    <div>\n      <h2>Past Races</h2>\n      <button onClick={handleRefresh} disabled={isLoading}>\n        {isLoading ? \"Refreshing...\" : \"Refresh Races\"}\n      </button>\n      {isLoading ? (\n        <div className=\"loading\">Loading past races...</div>\n      ) : pastRaces.length > 0 ? (\n        <ul>\n          {/* Map over pastRaces and display details */}\n          {pastRaces.map((race) => (\n            <li key={race.round}>\n              {/* Display race details (e.g., race name, date, winner) */}\n              {race.raceName} ({race.date}) - Winner: {race.Results[0]?.Driver?.driverId || \"N/A\"}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No past races found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default PastRaces;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}