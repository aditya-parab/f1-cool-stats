{"ast":null,"code":"var _jsxFileName = \"/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport throttle from \"lodash.throttle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PastRaces() {\n  _s();\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const today = new Date();\n  const todaysyear = today.getFullYear();\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      var _response$data;\n      const url = `/v1/meetings?year=${todaysyear}`;\n      const response = await axios.get(url);\n      const filteredRaces = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.filter(race => new Date(race.date_start) <= today);\n      setPastRaces(filteredRaces || []);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  const [winnerData, setWinnerData] = useState({});\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n  const throttledGetWinner = throttle(async country_code => {\n    try {\n      var _response$data2, _response$data2$, _winnerResponse$data, _winnerResponse$data$, _winnerResponse$data$2;\n      let url = `/v1/sessions?country_code=${country_code}&session_name=Race&session_type=Race&year=${todaysyear}`;\n      const response = await axios.get(url);\n      let session_key = (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$ = _response$data2[0]) === null || _response$data2$ === void 0 ? void 0 : _response$data2$.session_key;\n      let winnerdriverNumber = `/v1/position?session_key=${session_key}&position=1`;\n      const winnerResponse = await axios.get(winnerdriverNumber);\n      const winner = ((_winnerResponse$data = winnerResponse.data) === null || _winnerResponse$data === void 0 ? void 0 : (_winnerResponse$data$ = _winnerResponse$data.data) === null || _winnerResponse$data$ === void 0 ? void 0 : (_winnerResponse$data$2 = _winnerResponse$data$[0]) === null || _winnerResponse$data$2 === void 0 ? void 0 : _winnerResponse$data$2.last_name) || \"N/A\";\n      setWinnerData(prev => ({\n        ...prev,\n        [country_code]: winner\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  }, 1000); // Adjust the delay (in milliseconds) as needed\n\n  useEffect(() => {\n    pastRaces.forEach(race => {\n      if (!winnerData[race.country_code]) {\n        throttledGetWinner(race.country_code);\n      }\n    });\n  }, [pastRaces, winnerData]);\n  function handleRefresh() {\n    fetchPastRaces();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      disabled: isLoading,\n      children: isLoading ? \"Refreshing...\" : \"Refresh Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading past races...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : pastRaces.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pastRaces.map(race => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [race.meeting_name, \" (\", new Date(race.date_start).toLocaleDateString(), \") -\", isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading winner...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Winner: \", winnerData[race.country_code] || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, race.circuit_key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No past races found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(PastRaces, \"gHbAUBjE8Q/F50MY+4Ph9tcj11Q=\");\n_c = PastRaces;\nexport default PastRaces;\nvar _c;\n$RefreshReg$(_c, \"PastRaces\");","map":{"version":3,"names":["React","useState","useEffect","axios","throttle","jsxDEV","_jsxDEV","PastRaces","_s","pastRaces","setPastRaces","isLoading","setLoading","today","Date","todaysyear","getFullYear","fetchPastRaces","_response$data","url","response","get","filteredRaces","data","filter","race","date_start","error","console","winnerData","setWinnerData","throttledGetWinner","country_code","_response$data2","_response$data2$","_winnerResponse$data","_winnerResponse$data$","_winnerResponse$data$2","session_key","winnerdriverNumber","winnerResponse","winner","last_name","prev","log","forEach","handleRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","className","length","map","meeting_name","toLocaleDateString","circuit_key","_c","$RefreshReg$"],"sources":["/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport throttle from \"lodash.throttle\";\n\nfunction PastRaces() {\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const today = new Date();\n  const todaysyear = today.getFullYear();\n\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      const url = `/v1/meetings?year=${todaysyear}`;\n      const response = await axios.get(url);\n\n      const filteredRaces = response.data?.filter(\n        (race) => new Date(race.date_start) <= today\n      );\n\n      setPastRaces(filteredRaces || []);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const [winnerData, setWinnerData] = useState({});\n\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n\n  const throttledGetWinner = throttle(async (country_code) => {\n    try {\n      let url = `/v1/sessions?country_code=${country_code}&session_name=Race&session_type=Race&year=${todaysyear}`;\n      const response = await axios.get(url);\n      let session_key = response.data?.[0]?.session_key;\n      let winnerdriverNumber = `/v1/position?session_key=${session_key}&position=1`;\n      const winnerResponse = await axios.get(winnerdriverNumber);\n      const winner = winnerResponse.data?.data?.[0]?.last_name || \"N/A\";\n      setWinnerData((prev) => ({ ...prev, [country_code]: winner }));\n    } catch (error) {\n      console.log(error);\n    }\n  }, 1000); // Adjust the delay (in milliseconds) as needed\n\n  useEffect(() => {\n    pastRaces.forEach((race) => {\n      if (!winnerData[race.country_code]) {\n        throttledGetWinner(race.country_code);\n      }\n    });\n  }, [pastRaces, winnerData]);\n\n  function handleRefresh() {\n    fetchPastRaces();\n  }\n\n  return (\n    <div>\n      <h2>Past Races</h2>\n      <button onClick={handleRefresh} disabled={isLoading}>\n        {isLoading ? \"Refreshing...\" : \"Refresh Races\"}\n      </button>\n      {isLoading ? (\n        <div className=\"loading\">Loading past races...</div>\n      ) : pastRaces.length > 0 ? (\n        <ul>\n          {pastRaces.map((race) => (\n            <li key={race.circuit_key}>\n              {race.meeting_name} ({new Date(race.date_start).toLocaleDateString()}) -\n              {isLoading ? (\n                <span>Loading winner...</span>\n              ) : (\n                <span>Winner: {winnerData[race.country_code] || \"N/A\"}</span>\n              )}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No past races found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default PastRaces;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}