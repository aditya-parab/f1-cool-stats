{"ast":null,"code":"var _jsxFileName = \"/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PastRaces() {\n  _s();\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      var _response$data, _response$data$MRData, _response$data$MRData2, _response$data2, _response$data2$MRDat, _response$data2$MRDat2, _response$data2$MRDat3, _response$data3, _response$data3$MRDat, _response$data3$MRDat2;\n      const currentYear = new Date().getFullYear();\n      const url = `https://ergast.com/api/f1/${currentYear}/results.json`;\n      const response = await axios.get(url);\n      const today = new Date().toISOString().slice(0, 10); // Get today's date in YYYY-MM-DD format\n      console.log((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$MRData = _response$data.MRData) === null || _response$data$MRData === void 0 ? void 0 : (_response$data$MRData2 = _response$data$MRData.RaceTable) === null || _response$data$MRData2 === void 0 ? void 0 : _response$data$MRData2.Races);\n\n      // Filter past races based on date\n      const filteredRaces = (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$MRDat = _response$data2.MRData) === null || _response$data2$MRDat === void 0 ? void 0 : (_response$data2$MRDat2 = _response$data2$MRDat.RaceTable) === null || _response$data2$MRDat2 === void 0 ? void 0 : (_response$data2$MRDat3 = _response$data2$MRDat2.Races) === null || _response$data2$MRDat3 === void 0 ? void 0 : _response$data2$MRDat3.filter(race => race.date < today);\n      console.log((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$MRDat = _response$data3.MRData) === null || _response$data3$MRDat === void 0 ? void 0 : (_response$data3$MRDat2 = _response$data3$MRDat.RaceTable) === null || _response$data3$MRDat2 === void 0 ? void 0 : _response$data3$MRDat2.Races);\n      setPastRaces(filteredRaces || []);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n  function handleRefresh() {\n    fetchPastRaces();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      disabled: isLoading,\n      children: isLoading ? \"Refreshing...\" : \"Refresh Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading past races...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : pastRaces.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pastRaces.map(race => {\n        var _race$Results$, _race$Results$$Driver;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [race.raceName, \" (\", race.date, \") - Winner: \", ((_race$Results$ = race.Results[0]) === null || _race$Results$ === void 0 ? void 0 : (_race$Results$$Driver = _race$Results$.Driver) === null || _race$Results$$Driver === void 0 ? void 0 : _race$Results$$Driver.driverId) || \"N/A\"]\n        }, race.round, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No past races found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(PastRaces, \"qV6nfxFS8MuPV6dyj8GUD3A6iLw=\");\n_c = PastRaces;\nexport default PastRaces;\nvar _c;\n$RefreshReg$(_c, \"PastRaces\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PastRaces","_s","pastRaces","setPastRaces","isLoading","setLoading","fetchPastRaces","_response$data","_response$data$MRData","_response$data$MRData2","_response$data2","_response$data2$MRDat","_response$data2$MRDat2","_response$data2$MRDat3","_response$data3","_response$data3$MRDat","_response$data3$MRDat2","currentYear","Date","getFullYear","url","response","get","today","toISOString","slice","console","log","data","MRData","RaceTable","Races","filteredRaces","filter","race","date","error","handleRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","className","length","map","_race$Results$","_race$Results$$Driver","raceName","Results","Driver","driverId","round","_c","$RefreshReg$"],"sources":["/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction PastRaces() {\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      const currentYear = new Date().getFullYear();\n      const url = `https://ergast.com/api/f1/${currentYear}/results.json`;\n\n      const response = await axios.get(url);\n      const today = new Date().toISOString().slice(0, 10); // Get today's date in YYYY-MM-DD format\n      console.log(response.data?.MRData?.RaceTable?.Races);\n\n      // Filter past races based on date\n      const filteredRaces = response.data?.MRData?.RaceTable?.Races?.filter(\n        (race) => race.date < today\n        \n      );\n      console.log(response.data?.MRData?.RaceTable?.Races);\n      setPastRaces(filteredRaces || []);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n\n  function handleRefresh() {\n    \n    fetchPastRaces();\n  }\n\n  return (\n    <div>\n      <h2>Past Races</h2>\n      <button onClick={handleRefresh} disabled={isLoading}>\n        {isLoading ? \"Refreshing...\" : \"Refresh Races\"}\n      </button>\n      {isLoading ? (\n        <div className=\"loading\">Loading past races...</div>\n      ) : pastRaces.length > 0 ? (\n        <ul>\n          {/* Map over pastRaces and display details */}\n          {pastRaces.map((race) => (\n            <li key={race.round}>\n              {/* Display race details (e.g., race name, date, winner) */}\n              {race.raceName} ({race.date}) - Winner: {race.Results[0]?.Driver?.driverId || \"N/A\"}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No past races found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default PastRaces;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}