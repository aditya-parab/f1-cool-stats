{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nfunction PastRaces() {\n  _s();\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const today = new Date(); // Get today's date in YYYY-MM-DD format\n  const todaysyear = today.getFullYear();\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      const url = `https://ergast.com/api/f1/${todaysyear}/results/1.json`;\n      const response = await axios.get(url);\n      // const data = JSON.parse(response);\n\n      console.log(response);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n    setPastRaces();\n  }\n\n  // useEffect(()=>{\n  // handleRefresh();\n  // },[]);\n\n  //   function handleRefresh() {\n  //     fetchPastRaces();\n  //   }\n\n  //   return (\n  //     <div>\n  //       <h2>Past Races</h2>\n  //       <button onClick={handleRefresh} disabled={isLoading}>\n  //         {isLoading ? \"Refreshing...\" : \"Refresh Races\"}\n  //       </button>\n  //       {isLoading ? (\n  //         <div className=\"loading\">Loading past races...</div>\n  //       ) : pastRaces.length > 0 ? (\n  //         <ul>\n  //           {/* Map over pastRaces and display details */}\n  //           {pastRaces.map((race) => (\n  //             <li key={race.circuit_key}>\n  //               {/* Display race details (e.g., race name, date, winner) */}\n\n  //             </li>\n  //           ))}\n  //         </ul>\n  //       ) : (\n  //         <p>No past races found.</p>\n  //       )}\n  //     </div>\n  //   );\n}\n_s(PastRaces, \"KOBvHDZhuHrRvKUAzpvQT46qiWM=\");\n_c = PastRaces;\nexport default PastRaces;\nvar _c;\n$RefreshReg$(_c, \"PastRaces\");","map":{"version":3,"names":["React","useState","useEffect","axios","PastRaces","_s","pastRaces","setPastRaces","isLoading","setLoading","today","Date","todaysyear","getFullYear","fetchPastRaces","url","response","get","console","log","error","_c","$RefreshReg$"],"sources":["/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n\n\nfunction PastRaces() {\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const today = new Date(); // Get today's date in YYYY-MM-DD format\n  const todaysyear = today.getFullYear();\n\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      const url = `https://ergast.com/api/f1/${todaysyear}/results/1.json`;\n    \n      const response = await axios.get(url);\n      // const data = JSON.parse(response);\n\n      console.log(response);\n\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n\n\n    setPastRaces()\n  }\n\n\n// useEffect(()=>{\n// handleRefresh();\n// },[]);\n\n\n//   function handleRefresh() {\n//     fetchPastRaces();\n//   }\n\n\n\n//   return (\n//     <div>\n//       <h2>Past Races</h2>\n//       <button onClick={handleRefresh} disabled={isLoading}>\n//         {isLoading ? \"Refreshing...\" : \"Refresh Races\"}\n//       </button>\n//       {isLoading ? (\n//         <div className=\"loading\">Loading past races...</div>\n//       ) : pastRaces.length > 0 ? (\n//         <ul>\n//           {/* Map over pastRaces and display details */}\n//           {pastRaces.map((race) => (\n//             <li key={race.circuit_key}>\n//               {/* Display race details (e.g., race name, date, winner) */}\n              \n              \n//             </li>\n//           ))}\n//         </ul>\n//       ) : (\n//         <p>No past races found.</p>\n//       )}\n//     </div>\n//   );\n}\n\nexport default PastRaces;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAIzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,SAAS,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMS,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,MAAMC,UAAU,GAAGF,KAAK,CAACG,WAAW,CAAC,CAAC;EAEtC,eAAeC,cAAcA,CAAA,EAAG;IAC9BL,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMM,GAAG,GAAG,6BAA6BH,UAAU,iBAAiB;MAEpE,MAAMI,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACF,GAAG,CAAC;MACrC;;MAEAG,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IAEvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS;MACRX,UAAU,CAAC,KAAK,CAAC;IACnB;IAGAF,YAAY,CAAC,CAAC;EAChB;;EAGF;EACA;EACA;;EAGA;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;AAACF,EAAA,CA9DQD,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AAgElB,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}