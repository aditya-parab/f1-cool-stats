{"ast":null,"code":"var _jsxFileName = \"/Users/adity/Coding/f1app/f1-cool-stats/src/UpcomingRaces.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpcomingRaces() {\n  _s();\n  const [races, setRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  async function fetchUpcomingRaces() {\n    setLoading(true);\n    try {\n      var _response$data, _response$data$MRData, _response$data$MRData2;\n      const response = await axios.get(\"https://ergast.com/api/f1/current/races.json\");\n      setRaces(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$MRData = _response$data.MRData) === null || _response$data$MRData === void 0 ? void 0 : (_response$data$MRData2 = _response$data$MRData.RaceTable) === null || _response$data$MRData2 === void 0 ? void 0 : _response$data$MRData2.Races) || []);\n    } catch (error) {\n      console.error(\"The error is...\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchUpcomingRaces();\n  }, []);\n  function handleRefresh() {\n    setLoading(true);\n    fetchUpcomingRaces();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upcoming Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      disabled: isLoading,\n      children: isLoading ? \"Refreshing...\" : \"Refresh Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading upcoming races...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : races.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: races.map(race => {\n        var _race$circuit;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [race.raceName, \" - \", ((_race$circuit = race.circuit) === null || _race$circuit === void 0 ? void 0 : _race$circuit.circuitName) || \"Circuit name not available\", \" (\", race.date, \")\"]\n        }, race.round, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No upcoming races found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(UpcomingRaces, \"6L3GQ/HDtmbNwbbVyd9T11oMN6Y=\");\n_c = UpcomingRaces;\nexport default UpcomingRaces;\nvar _c;\n$RefreshReg$(_c, \"UpcomingRaces\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UpcomingRaces","_s","races","setRaces","isLoading","setLoading","fetchUpcomingRaces","_response$data","_response$data$MRData","_response$data$MRData2","response","get","data","MRData","RaceTable","Races","error","console","handleRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","className","length","map","race","_race$circuit","raceName","circuit","circuitName","date","round","_c","$RefreshReg$"],"sources":["/Users/adity/Coding/f1app/f1-cool-stats/src/UpcomingRaces.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction UpcomingRaces() {\n  const [races, setRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  async function fetchUpcomingRaces() {\n    setLoading(true);\n    try {\n      const response = await axios.get(\"https://ergast.com/api/f1/current/races.json\");\n      setRaces(response.data?.MRData?.RaceTable?.Races || []);\n    } catch (error) {\n      console.error(\"The error is...\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchUpcomingRaces();\n  }, []);\n\n  function handleRefresh() {\n    setLoading(true);\n    fetchUpcomingRaces();\n  }\n\n  return (\n    <div>\n      <h2>Upcoming Races</h2>\n      <button onClick={handleRefresh} disabled={isLoading}>\n        {isLoading ? \"Refreshing...\" : \"Refresh Races\"}\n      </button>\n      {isLoading ? (\n        <div className=\"loading\">Loading upcoming races...</div>\n      ) : races.length > 0 ? (\n        <ul>\n          {races.map((race) => (\n            <li key={race.round}>\n              {/* Optional chaining for nested properties */}\n              {race.raceName} - {race.circuit?.circuitName || \"Circuit name not available\"} ({race.date})\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No upcoming races found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default UpcomingRaces;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}