{"ast":null,"code":"var _jsxFileName = \"/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PastRaces() {\n  _s();\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const today = new Date(); // Get today's date in YYYY-MM-DD format\n  const year = today.getFullYear();\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      var _response$data;\n      const currentYear = new Date().getFullYear();\n      const url = `https://api.openf1.org/v1/meetings?year=2024`;\n      const response = await axios.get(url);\n      // console.log(new Date(response.data[0].date_start));\n\n      // Filter past races based on date\n      const filteredRaces = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.filter(race => new Date(race.date_start) <= today);\n\n      // console.log(filteredRaces);\n\n      setPastRaces(filteredRaces || []);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  function getWinner(country_code) {\n    let data = `https://api.openf1.org/v1/sessions?country_code=${country_code}&session_name=Race&session_type=Race&year=${year}`;\n    const dataJSON = JSON.parse(data);\n    let session_key = dataJSON.session_key;\n    let winner = `https://api.openf1.org/v1/position?session_key=${session_key}&position=1`;\n    console.log(session_key);\n    // console.log(typeof(data));\n    return winner;\n  }\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n  function handleRefresh() {\n    fetchPastRaces();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      disabled: isLoading,\n      children: isLoading ? \"Refreshing...\" : \"Refresh Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading past races...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : pastRaces.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pastRaces.map(race => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [race.meeting_name, \" (\", new Date(race.date_start).toLocaleDateString(), \") - Winner: \", getWinner(race.country_code) || \"N/A\"]\n      }, race.circuit_key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No past races found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(PastRaces, \"qV6nfxFS8MuPV6dyj8GUD3A6iLw=\");\n_c = PastRaces;\nexport default PastRaces;\nvar _c;\n$RefreshReg$(_c, \"PastRaces\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PastRaces","_s","pastRaces","setPastRaces","isLoading","setLoading","today","Date","year","getFullYear","fetchPastRaces","_response$data","currentYear","url","response","get","filteredRaces","data","filter","race","date_start","error","console","getWinner","country_code","dataJSON","JSON","parse","session_key","winner","log","handleRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","className","length","map","meeting_name","toLocaleDateString","circuit_key","_c","$RefreshReg$"],"sources":["/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction PastRaces() {\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const today = new Date(); // Get today's date in YYYY-MM-DD format\n  const year = today.getFullYear();\n\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      const currentYear = new Date().getFullYear();\n      const url = `https://api.openf1.org/v1/meetings?year=2024`;\n\n      const response = await axios.get(url);\n      // console.log(new Date(response.data[0].date_start));\n      \n      \n      // Filter past races based on date\n      const filteredRaces = response.data?.filter(\n        (race) => new Date(race.date_start) <= today\n        \n      );\n      \n      // console.log(filteredRaces);\n      \n\n      \n      \n      setPastRaces(filteredRaces || []);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  function getWinner(country_code){\n    \n      let data = `https://api.openf1.org/v1/sessions?country_code=${country_code}&session_name=Race&session_type=Race&year=${year}`;\n      const dataJSON =  JSON.parse(data);\n      let session_key = dataJSON.session_key;\n      let winner = `https://api.openf1.org/v1/position?session_key=${session_key}&position=1`;\n      console.log(session_key)\n      // console.log(typeof(data));\n      return winner;\n    \n  }\n\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n\n  function handleRefresh() {\n    \n    fetchPastRaces();\n  }\n\n  return (\n    <div>\n      <h2>Past Races</h2>\n      <button onClick={handleRefresh} disabled={isLoading}>\n        {isLoading ? \"Refreshing...\" : \"Refresh Races\"}\n      </button>\n      {isLoading ? (\n        <div className=\"loading\">Loading past races...</div>\n      ) : pastRaces.length > 0 ? (\n        <ul>\n          {/* Map over pastRaces and display details */}\n          {pastRaces.map((race) => (\n            <li key={race.circuit_key}>\n              {/* Display race details (e.g., race name, date, winner) */}\n              {/* {  const resp=  `https://api.openf1.org/v1/sessions?country_code=race.country_code&session_name=Race&session_type=Race`} */}\n              {race.meeting_name} ({new Date(race.date_start).toLocaleDateString()}) - Winner: { getWinner(race.country_code) || \"N/A\"}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No past races found.</p>\n      )}\n    </div>\n  );\n}\n\n\nexport default PastRaces;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}