{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UpcomingRaces(){const[races,setRaces]=useState([]);const[isLoading,setLoading]=useState(false);async function fetchUpcomingRaces(){setLoading(true);try{var _response$data,_response$data$MRData,_response$data$MRData2;const response=await axios.get(\"https://ergast.com/api/f1/current/races.json\");const today=new Date().toISOString().slice(0,10);// Get today's date in YYYY-MM-DD format\nsetRaces(((_response$data=response.data)===null||_response$data===void 0?void 0:(_response$data$MRData=_response$data.MRData)===null||_response$data$MRData===void 0?void 0:(_response$data$MRData2=_response$data$MRData.RaceTable)===null||_response$data$MRData2===void 0?void 0:_response$data$MRData2.Races.filter(race=>race.date>=today))||[]);}catch(error){console.error(\"The error is...\",error);}finally{setLoading(false);}}useEffect(()=>{fetchUpcomingRaces();},[]);function handleRefresh(){setLoading(true);fetchUpcomingRaces();}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Upcoming Races\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRefresh,disabled:isLoading,children:isLoading?\"Refreshing...\":\"Refresh Races\"}),isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading upcoming races...\"}):races.length>0?/*#__PURE__*/_jsx(\"ol\",{children:races.map(race=>{var _race$Circuit;return/*#__PURE__*/_jsxs(\"li\",{children:[race.raceName,\" - \",((_race$Circuit=race.Circuit)===null||_race$Circuit===void 0?void 0:_race$Circuit.circuitName)||\"Circuit name not available\",\" (\",race.date,\")\"]},race.round);})}):/*#__PURE__*/_jsx(\"p\",{children:\"No upcoming races found.\"})]});}export default UpcomingRaces;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","UpcomingRaces","races","setRaces","isLoading","setLoading","fetchUpcomingRaces","_response$data","_response$data$MRData","_response$data$MRData2","response","get","today","Date","toISOString","slice","data","MRData","RaceTable","Races","filter","race","date","error","console","handleRefresh","children","onClick","disabled","className","length","map","_race$Circuit","raceName","Circuit","circuitName","round"],"sources":["/Users/adity/Coding/f1app/f1-cool-stats/src/UpcomingRaces.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction UpcomingRaces() {\n  const [races, setRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  async function fetchUpcomingRaces() {\n    setLoading(true);\n    try {\n      const response = await axios.get(\"https://ergast.com/api/f1/current/races.json\");\n      const today = new Date().toISOString().slice(0, 10); // Get today's date in YYYY-MM-DD format\n      setRaces(response.data?.MRData?.RaceTable?.Races.filter((race) => race.date >= today) || []);\n    } catch (error) {\n      console.error(\"The error is...\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    fetchUpcomingRaces();\n  }, []);\n\n  function handleRefresh() {\n    setLoading(true);\n    fetchUpcomingRaces();\n  }\n\n  return (\n    <div>\n      <h2>Upcoming Races</h2>\n      <button onClick={handleRefresh} disabled={isLoading}>\n        {isLoading ? \"Refreshing...\" : \"Refresh Races\"}\n      </button>\n      {isLoading ? (\n        <div className=\"loading\">Loading upcoming races...</div>\n      ) : races.length > 0 ? (\n        <ol>\n          {races.map((race) => (\n            <li key={race.round}>\n              {/* Optional chaining for nested properties */}\n              {race.raceName} - {race.Circuit?.circuitName || \"Circuit name not available\"} ({race.date})\n            </li>\n          ))}\n        </ol>\n      ) : (\n        <p>No upcoming races found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default UpcomingRaces;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACvB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,SAAS,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CAE/C,cAAe,CAAAY,kBAAkBA,CAAA,CAAG,CAClCD,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,KAAAE,cAAA,CAAAC,qBAAA,CAAAC,sBAAA,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAAC,8CAA8C,CAAC,CAChF,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAE;AACrDZ,QAAQ,CAAC,EAAAI,cAAA,CAAAG,QAAQ,CAACM,IAAI,UAAAT,cAAA,kBAAAC,qBAAA,CAAbD,cAAA,CAAeU,MAAM,UAAAT,qBAAA,kBAAAC,sBAAA,CAArBD,qBAAA,CAAuBU,SAAS,UAAAT,sBAAA,iBAAhCA,sBAAA,CAAkCU,KAAK,CAACC,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACC,IAAI,EAAIV,KAAK,CAAC,GAAI,EAAE,CAAC,CAC9F,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACzC,CAAC,OAAS,CACRlB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAEAV,SAAS,CAAC,IAAM,CACdW,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,QAAS,CAAAmB,aAAaA,CAAA,CAAG,CACvBpB,UAAU,CAAC,IAAI,CAAC,CAChBC,kBAAkB,CAAC,CAAC,CACtB,CAEA,mBACEN,KAAA,QAAA0B,QAAA,eACE5B,IAAA,OAAA4B,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvB5B,IAAA,WAAQ6B,OAAO,CAAEF,aAAc,CAACG,QAAQ,CAAExB,SAAU,CAAAsB,QAAA,CACjDtB,SAAS,CAAG,eAAe,CAAG,eAAe,CACxC,CAAC,CACRA,SAAS,cACRN,IAAA,QAAK+B,SAAS,CAAC,SAAS,CAAAH,QAAA,CAAC,2BAAyB,CAAK,CAAC,CACtDxB,KAAK,CAAC4B,MAAM,CAAG,CAAC,cAClBhC,IAAA,OAAA4B,QAAA,CACGxB,KAAK,CAAC6B,GAAG,CAAEV,IAAI,OAAAW,aAAA,oBACdhC,KAAA,OAAA0B,QAAA,EAEGL,IAAI,CAACY,QAAQ,CAAC,KAAG,CAAC,EAAAD,aAAA,CAAAX,IAAI,CAACa,OAAO,UAAAF,aAAA,iBAAZA,aAAA,CAAcG,WAAW,GAAI,4BAA4B,CAAC,IAAE,CAACd,IAAI,CAACC,IAAI,CAAC,GAC5F,GAHSD,IAAI,CAACe,KAGV,CAAC,EACN,CAAC,CACA,CAAC,cAELtC,IAAA,MAAA4B,QAAA,CAAG,0BAAwB,CAAG,CAC/B,EACE,CAAC,CAEV,CAEA,cAAe,CAAAzB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}