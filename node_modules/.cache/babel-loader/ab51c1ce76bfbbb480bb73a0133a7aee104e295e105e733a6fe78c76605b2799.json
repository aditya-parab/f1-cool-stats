{"ast":null,"code":"var _jsxFileName = \"/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PastRaces() {\n  _s();\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const today = new Date(); // Get today's date in YYYY-MM-DD format\n  const todaysyear = today.getFullYear();\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      var _response$data;\n      const url = `https://api.openf1.org/v1/meetings?year=2024`;\n      const response = await axios.get(url);\n\n      // Filter past races based on date\n      const filteredRaces = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.filter(race => new Date(race.date_start) <= today);\n      setPastRaces(filteredRaces || []);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  const [winnerData, setWinnerData] = useState({}); // State to store winner info\n\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n  async function getWinner(country_code) {\n    try {\n      let url = `https://api.openf1.org/v1/sessions?country_code=${country_code}&session_name=Race&session_type=Race&year=${todaysyear}`;\n      const response = await axios.get(url);\n      let session_key = response.session_key;\n      let winnerdriverNumber = `https://api.openf1.org/v1/drivers?driver_number=${session_key.split(\"-\")[1]}`; // Extract driver number from session_key\n      console.log(winnerdriverNumber);\n      const winnerResponse = await axios.get(`https://api.openf1.org/v1/drivers?driver_number=${winnerdriverNumber}`);\n      const winner = (winnerResponse === null || winnerResponse === void 0 ? void 0 : winnerResponse.last_name) || \"N/A\"; // Handle cases where winner data might be missing\n      setWinnerData({\n        ...winnerData,\n        [country_code]: winner\n      }); // Store winner data for each race country code\n      return winner;\n    } catch (error) {\n      console.log(error);\n      return \"Error fetching winner information\"; // More informative error message\n    }\n  }\n  function handleRefresh() {\n    fetchPastRaces();\n  }\n  useEffect(() => {\n    fetchPastRaces();\n\n    // Loop through pastRaces and call getWinner for missing data\n    pastRaces.forEach(async race => {\n      if (!winnerData[race.country_code]) {\n        await getWinner(race.country_code);\n      }\n    });\n  }, [pastRaces, winnerData]); // Update effect when races or winner data changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      disabled: isLoading,\n      children: isLoading ? \"Refreshing...\" : \"Refresh Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading past races...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : pastRaces.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pastRaces.map(race => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [race.meeting_name, \" (\", new Date(race.date_start).toLocaleDateString(), \") -\", isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading winner...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Winner: \", winnerData[race.country_code] || \"N/A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, race.circuit_key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No past races found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(PastRaces, \"gHbAUBjE8Q/F50MY+4Ph9tcj11Q=\");\n_c = PastRaces;\nexport default PastRaces;\nvar _c;\n$RefreshReg$(_c, \"PastRaces\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PastRaces","_s","pastRaces","setPastRaces","isLoading","setLoading","today","Date","todaysyear","getFullYear","fetchPastRaces","_response$data","url","response","get","filteredRaces","data","filter","race","date_start","error","console","winnerData","setWinnerData","getWinner","country_code","session_key","winnerdriverNumber","split","log","winnerResponse","winner","last_name","handleRefresh","forEach","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","className","length","map","meeting_name","toLocaleDateString","circuit_key","_c","$RefreshReg$"],"sources":["/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction PastRaces() {\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const today = new Date(); // Get today's date in YYYY-MM-DD format\n  const todaysyear = today.getFullYear();\n\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      const url = `https://api.openf1.org/v1/meetings?year=2024`;\n\n      const response = await axios.get(url);\n\n      // Filter past races based on date\n      const filteredRaces = response.data?.filter(\n        (race) => new Date(race.date_start) <= today\n      );\n\n      setPastRaces(filteredRaces || []);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const [winnerData, setWinnerData] = useState({}); // State to store winner info\n\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n\n  async function getWinner(country_code) {\n    try {\n      let url = `https://api.openf1.org/v1/sessions?country_code=${country_code}&session_name=Race&session_type=Race&year=${todaysyear}`;\n      const response = await axios.get(url);\n      let session_key = response.session_key;\n      let winnerdriverNumber = `https://api.openf1.org/v1/drivers?driver_number=${session_key.split(\"-\")[1]}`; // Extract driver number from session_key\n      console.log(winnerdriverNumber)\n      const winnerResponse = await axios.get(`https://api.openf1.org/v1/drivers?driver_number=${winnerdriverNumber}`);\n      const winner = winnerResponse?.last_name || \"N/A\"; // Handle cases where winner data might be missing\n      setWinnerData({ ...winnerData, [country_code]: winner }); // Store winner data for each race country code\n      return winner;\n    } catch (error) {\n      console.log(error);\n      return \"Error fetching winner information\"; // More informative error message\n    }\n  }\n\n  \n  \n  function handleRefresh() {\n    fetchPastRaces();\n  }\n\n  useEffect(() => {\n    fetchPastRaces();\n  \n    // Loop through pastRaces and call getWinner for missing data\n    pastRaces.forEach(async (race) => {\n      if (!winnerData[race.country_code]) {\n        await getWinner(race.country_code);\n      }\n    });\n  }, [pastRaces, winnerData]); // Update effect when races or winner data changes\n  \n  return (\n    <div>\n      <h2>Past Races</h2>\n      <button onClick={handleRefresh} disabled={isLoading}>\n        {isLoading ? \"Refreshing...\" : \"Refresh Races\"}\n      </button>\n      {isLoading ? (\n        <div className=\"loading\">Loading past races...</div>\n      ) : pastRaces.length > 0 ? (\n        <ul>\n          {/* Map over pastRaces and display details */}\n          {pastRaces.map((race) => (\n            <li key={race.circuit_key}>\n              {/* Display race details (e.g., race name, date, winner) */}\n              \n              {race.meeting_name} ({new Date(race.date_start).toLocaleDateString()}) -\n              {isLoading ? (\n                <span>Loading winner...</span>\n              ) : (\n                <span>Winner: {winnerData[race.country_code] || \"N/A\"}</span>\n              )}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No past races found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default PastRaces;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}