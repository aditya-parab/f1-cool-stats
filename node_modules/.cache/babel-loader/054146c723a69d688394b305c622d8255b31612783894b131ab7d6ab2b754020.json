{"ast":null,"code":"var _jsxFileName = \"/Users/adity/Coding/f1app/f1-cool-stats/src/CurrentStandings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './styles.css'; // Import the global CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CurrentStandings() {\n  _s();\n  const [driverStandings, setDriverStandings] = useState([]);\n  const [constructorStandings, setConstructorStandings] = useState([]);\n  const [isLoading, setloading] = useState(false);\n  async function fetchStandings() {\n    setloading(true);\n    try {\n      var _driverResponse$data, _driverResponse$data$, _driverResponse$data$2, _driverResponse$data$3, _constructorResponse$, _constructorResponse$2, _constructorResponse$3, _constructorResponse$4;\n      const driverResponse = await axios.get(`https://ergast.com/api/f1/current/driverStandings.json`);\n      const constructorResponse = await axios.get(`https://ergast.com/api/f1/current/constructorStandings.json`);\n      setDriverStandings(((_driverResponse$data = driverResponse.data) === null || _driverResponse$data === void 0 ? void 0 : (_driverResponse$data$ = _driverResponse$data.MRData) === null || _driverResponse$data$ === void 0 ? void 0 : (_driverResponse$data$2 = _driverResponse$data$.StandingsTable) === null || _driverResponse$data$2 === void 0 ? void 0 : (_driverResponse$data$3 = _driverResponse$data$2.StandingsLists[0]) === null || _driverResponse$data$3 === void 0 ? void 0 : _driverResponse$data$3.DriverStandings) || []);\n      setConstructorStandings(((_constructorResponse$ = constructorResponse.data) === null || _constructorResponse$ === void 0 ? void 0 : (_constructorResponse$2 = _constructorResponse$.MRData) === null || _constructorResponse$2 === void 0 ? void 0 : (_constructorResponse$3 = _constructorResponse$2.StandingsTable) === null || _constructorResponse$3 === void 0 ? void 0 : (_constructorResponse$4 = _constructorResponse$3.StandingsLists[0]) === null || _constructorResponse$4 === void 0 ? void 0 : _constructorResponse$4.ConstructorStandings) || []);\n    } catch (error) {\n      console.error(\"Error fetching standings:\", error);\n    } finally {\n      setloading(false);\n    }\n  }\n  useEffect(() => {\n    fetchStandings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"current-standings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Standings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading standings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"standings-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"standings-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Drivers Standings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: driverStandings.map(driver => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [driver.Driver.code, \" - \", driver.points, \" pts\"]\n          }, driver.Driver.driverId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"standings-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Constructors Standings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: constructorStandings.map(constructor => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [constructor.Constructor.name, \" - \", constructor.points, \" pts\"]\n          }, constructor.Constructor.constructorId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(CurrentStandings, \"V6b+yNWWuoXl4i3QeFWvI/iSNgU=\");\n_c = CurrentStandings;\nexport default CurrentStandings;\nvar _c;\n$RefreshReg$(_c, \"CurrentStandings\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CurrentStandings","_s","driverStandings","setDriverStandings","constructorStandings","setConstructorStandings","isLoading","setloading","fetchStandings","_driverResponse$data","_driverResponse$data$","_driverResponse$data$2","_driverResponse$data$3","_constructorResponse$","_constructorResponse$2","_constructorResponse$3","_constructorResponse$4","driverResponse","get","constructorResponse","data","MRData","StandingsTable","StandingsLists","DriverStandings","ConstructorStandings","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","driver","Driver","code","points","driverId","constructor","Constructor","name","constructorId","_c","$RefreshReg$"],"sources":["/Users/adity/Coding/f1app/f1-cool-stats/src/CurrentStandings.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './styles.css'; // Import the global CSS file\n\nfunction CurrentStandings(){\n    const [driverStandings, setDriverStandings] = useState([]);\n    const [constructorStandings, setConstructorStandings] = useState([]);\n    const [isLoading, setloading] = useState(false);\n\n    async function fetchStandings() {\n        setloading(true);\n        try {\n            const driverResponse = await axios.get(\n                `https://ergast.com/api/f1/current/driverStandings.json`\n            );\n            const constructorResponse = await axios.get(\n                `https://ergast.com/api/f1/current/constructorStandings.json`\n            );\n            \n            setDriverStandings(driverResponse.data?.MRData?.StandingsTable?.StandingsLists[0]?.DriverStandings || []);\n            setConstructorStandings(constructorResponse.data?.MRData?.StandingsTable?.StandingsLists[0]?.ConstructorStandings || []);\n        } catch (error) {\n            console.error(\"Error fetching standings:\", error);\n        } finally {\n            setloading(false);\n        }\n    }\n\n    useEffect(() => {\n        fetchStandings();\n    }, []);\n\n    return (\n        <div className=\"current-standings-container\">\n            <h2>Current Standings</h2>\n            {isLoading ? (\n                <div className=\"loading\">Loading standings...</div>\n            ) : (\n                <div className=\"standings-grid\">\n                    <div className=\"standings-column\">\n                        <h3>Drivers Standings</h3>\n                        <ol>\n                            {driverStandings.map((driver) => (\n                                <li key={driver.Driver.driverId}>\n                                    {/* Display driver name, position, points (adapt based on API structure) */}\n                                    {driver.Driver.code} - {driver.points} pts\n                                </li>\n                            ))}\n                        </ol>\n                    </div>\n                    <div className=\"standings-column\">\n                        <h3>Constructors Standings</h3>\n                        <ol>\n                            {constructorStandings.map((constructor) => (\n                                <li key={constructor.Constructor.constructorId}>\n                                    {/* Display constructor name, position, points (adapt based on API structure) */}\n                                    {constructor.Constructor.name} - {constructor.points} pts\n                                </li>\n                            ))}\n                        </ol>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default CurrentStandings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}