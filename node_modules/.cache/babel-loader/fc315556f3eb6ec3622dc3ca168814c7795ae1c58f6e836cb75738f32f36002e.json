{"ast":null,"code":"var _jsxFileName = \"/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PastRaces() {\n  _s();\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const today = new Date(); // Get today's date in YYYY-MM-DD format\n  const todaysyear = today.getFullYear();\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      var _response$data, _response$data$MRData, _response$data$MRData2;\n      const url = `https://ergast.com/api/f1/${todaysyear}/results/1.json`;\n      const response = await axios.get(url);\n      const data = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$MRData = _response$data.MRData) === null || _response$data$MRData === void 0 ? void 0 : (_response$data$MRData2 = _response$data$MRData.RaceTable) === null || _response$data$MRData2 === void 0 ? void 0 : _response$data$MRData2.Races;\n      setPastRaces(data);\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n  function handleRefresh() {\n    fetchPastRaces();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Past Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      disabled: isLoading,\n      children: isLoading ? \"Refreshing...\" : \"Refresh Races\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading past races...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : pastRaces.length > 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: pastRaces.map(race => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [race.raceName, \" : \", race.Results[0].Driver.familyName]\n      }, race.circuit_key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No past races found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(PastRaces, \"qV6nfxFS8MuPV6dyj8GUD3A6iLw=\");\n_c = PastRaces;\nexport default PastRaces;\nvar _c;\n$RefreshReg$(_c, \"PastRaces\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PastRaces","_s","pastRaces","setPastRaces","isLoading","setLoading","today","Date","todaysyear","getFullYear","fetchPastRaces","_response$data","_response$data$MRData","_response$data$MRData2","url","response","get","data","MRData","RaceTable","Races","console","log","error","handleRefresh","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","className","length","map","race","raceName","Results","Driver","familyName","circuit_key","_c","$RefreshReg$"],"sources":["/Users/adity/Coding/f1app/f1-cool-stats/src/PastRaces.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n\n\nfunction PastRaces() {\n  const [pastRaces, setPastRaces] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const today = new Date(); // Get today's date in YYYY-MM-DD format\n  const todaysyear = today.getFullYear();\n\n  async function fetchPastRaces() {\n    setLoading(true);\n    try {\n      const url = `https://ergast.com/api/f1/${todaysyear}/results/1.json`;\n    \n      const response = await axios.get(url);\n      const data = response.data?.MRData?.RaceTable?.Races;\n      setPastRaces(data);\n      console.log(data);\n\n    } catch (error) {\n      console.error(\"Error fetching past races:\", error);\n    } finally {\n      setLoading(false);\n    }\n\n\n    \n  }\n\n\n  useEffect(() => {\n    fetchPastRaces();\n  }, []);\n\n  function handleRefresh() {\n    fetchPastRaces();\n  }\n\n\n \n\n\n\n  return (\n    <div>\n      <h2>Past Races</h2>\n      <button onClick={handleRefresh} disabled={isLoading}>\n        {isLoading ? \"Refreshing...\" : \"Refresh Races\"}\n      </button>\n      {isLoading ? (\n        <div className=\"loading\">Loading past races...</div>\n      ) : pastRaces.length > 0 ? (\n        <ol>\n          {/* Map over pastRaces and display details */}\n          {pastRaces.map((race) => (\n            <li key={race.circuit_key}>\n              {/* Display race details (e.g., race name, date, winner) */}\n              {race.raceName} : {race.Results[0].Driver.familyName}\n              \n            </li>\n          ))}\n        </ol>\n      ) : (\n        <p>No past races found.</p>\n      )}\n    </div>\n  );\n}\n\nexport default PastRaces;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}